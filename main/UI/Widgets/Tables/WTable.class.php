<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.0.10.99 at 2012-04-20 16:54:00                     *
 *   This file will never be generated again - feel free to edit.            *
 *****************************************************************************/

	class WTable extends BaseWidget
	{
		protected $tplName = 'table';
		protected $tplPrefix ='table';

		/**
		 * @var IFaceFieldsFilter
		 */
		protected $filter			 = null;

		/**
		 * @return WTable
		**/
		public static function create(array $rows=null, $name=null)
		{
			return new static($rows, $name);
		}

		public function __construct(array $rows=null, $name=null)
		{
			parent::__construct($name);

			$this->model->set('rows', array());
			$this->model->set('columns', array());
			$this->model->set('caption', null);
			$this->model->set('nextHref', null);
			$this->model->set('isMain', true);
			$this->model->set('caption', null);

			if($rows)
				$this->setRows($rows);
		}

		/**
		 * @param IfaceFieldsFilter $filter
		 * @return WTable
		 */
		public function setFilter(IfaceFieldsFilter $filter)
		{
			$this->filter = $filter;

			return $this;
		}

		public function getCaption()
		{
			return $this->model->get('caption');
		}

		/**
		 * @return WTable
		**/
		public function setCaption($caption)
		{
			$this->model->set('caption', $caption);

			return $this;
		}

		public function getNextHref()
		{
			return $this->model->get('nextHref');
		}

		/**
		 * @return WTable
		**/
		public function setNextHref($nextHref)
		{
			$this->model->set('nextHref', $nextHref);

			return $this;
		}

		/**
		 * @return bool
		 */
		public function isMain()
		{
			return ($this->model->get('isMain') === true);
		}

		/**
		 * @return WTable
		**/
		public function setMain($main = null)
		{
			Assert::isTernaryBase($main);

			$this->model->set('isMain', $main);

			return $this;
		}

		/**
		 * @return mixed
		 */
		public function getRows()
		{
			return $this->model->get('rows');
		}


		/**
		 * @param array $rows
		 * @return WTable
		 */
		public function setRows(array $rows = array())
		{
			$this->model->set('rows', $rows);

			return $this;
		}

		/**
		 * @return array
		 */
		public function getColumns()
		{
			return $this->model->get('columns');
		}

		/**
		 * @param array $columns
		 * @return WTable
		 */
		public function setColumns(array $columns = array())
		{
			$this->model->set('columns', $columns);

			return $this;
		}

		/**
		 * @param array $row
		 * @return WTable
		 */
		public function addRow(array $row)
		{
			$rows = $this->getRows();
			$rows[] = $row;

			return $this->setRows($rows);
		}

		/**
		 * @param TableRowData $data
		 * @return WTable
		 */
		public function addColumn($fieldName, $value)
		{
			$columns = $this->getColumns();
			$columns[$fieldName] = GuiUtils::ObjectToString($value);

			return $this->setColumns($columns);
		}

		/**
		 * @return string result
		 */
		protected function rendering($model = null, $merge=true)
		{
			if($this->filter)
			{
				$fields = array_keys($this->getColumns() );

				$this->setRows(
					$this->filter->setList(
						$this->getRows()
					)->setFields(
						$fields
					)->getList()
				);

			}

			return parent::rendering($model, $merge);
		}
	}
?>